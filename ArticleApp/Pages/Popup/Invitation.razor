@inject IJSRuntime JSRuntime


<h3>플레이스 초대</h3>

<div class="modal fade" tabindex="-1" role="dialog" id="aInvitationDialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">플레이스 초대</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <a href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fwww.naver.com;linkname=article.Id" target="_blank"> <span class="hide-txt">메일</span></a>
                    <a href="http://www.facebook.com/sharer/sharer.php?u=http://naver.com/" class="ico-sns sns-w-facebook" title="페이스북 공유하기" target="_blank"><span class="hide-txt">페이스북</span></a>
                    <a href="https://twitter.com/intent/tweet?text=내용추가불라불라;url=http://naver.com/" class="ico-sns sns-w-twitter" title="트위터 공유하기" target="_parent"><span class="hide-txt">트위터</span></a>
                    <a href="https://plus.google.com/share?url=http:http://naver.com/" class="ico-sns sns-w-google" title="구글플러스 공유하기" target="_blank"><span class="hide-txt">구글 플러스</span></a>
                </div>
                <hr />
                <div>
                    <input type="text" name="name" value="@Urll" />
                    <input type="button" value="복사" class="btn btn-outline-dark" @onclick="@CopyTextToClipboard" />
                </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-primary" @onclick="OnClick">Yes</button>*@
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public Article Model { get; set; } = new Article();

    public string url { get; set; }

    [Parameter]
    public RenderFragment Urll { get; set; }


    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }

    private async Task CopyTextToClipboard()
    {

        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", url);
    }

    @Urll =  $"{MyNavigationManager.Uri}/Index/{i}";
}
