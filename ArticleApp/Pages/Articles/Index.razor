@page   "/Articles"
@page   "/Articles/Index"

@using Dul.Web
@using ArticleApp.Models
@using Dul.Domain.Common
@using ArticleApp.Pages.Articles.Components



@using System.Windows;

@inject IArticleRepository ArticleRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject NavigationManager MyNavigationManager

<h3>Index</h3>

<div>
    <a href="/Articles/Create" class="btn btn-primary">Create</a>
    <AuthorizeView>
        <Authorized>
        </Authorized>
        <NotAuthorized>
            <a href="/Articles/Manage" class="btn btn-primary">Manage</a>
        </NotAuthorized>
    </AuthorizeView>
    <AuthorizeView Roles="Administrators, Managers">
        <a href="/Articles/Mange" class="btn btn-primary">Manage</a>
    </AuthorizeView>

</div>
<div>

</div>

@if (articles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Time</th>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
                <tr>
                    <td>@article.Id</td>
                    <td>@article.Title</td>
                    <td>@article.Created.ToShortTimeString()</td>
                    <td>
                        <a href="/Articles/Details/@article.Id" class="btn btn-dark">Details</a>
                        <a href="/Articles/Edit/@article.Id" class="btn btn-dark">Edit</a>
                        <a href="/Articles/Delete/@article.Id" class="btn btn-danger">Delete</a>
                    </td>
                    <td>
                        <input type="button" value="초대" class="btn btn-dark" data-toggle="modal" data-target="#aInvitationDialog" @onclick="(() => InvitationBy(article.Id))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@*<ArticleApp.Pages.Popup.Invitation OnClick="btn_Click">
        <Urll>@url</Urll>
    </ArticleApp.Pages.Popup.Invitation>*@

<ArticlePager Model="pager" PageIndexChanged="PageIndexChaged"> </ArticlePager>





<div class="modal fade" tabindex="-1" role="dialog" id="aInvitationDialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">플레이스 초대</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @* 메일 *@
                <a href="@GetUrl(1)">
                    <img src="https://icon-icons.com/icons2/1195/PNG/64/1490889681-email_82528.png" />
                </a>
                @* 페이스북 *@
                <a href="@GetUrl(2)" target="_blank" onClick="window.open(this.href, '', 'resizable,height=450,width=650'); return false;">
                    <img src="https://icon-icons.com/icons2/832/PNG/64/fb_icon-icons.com_66689.png">
                </a>
                @* 트위터 *@
                <a href="@GetUrl(3)" target="_blank" onClick="window.open(this.href, '', 'resizable,height=450,width=650'); return false;">
                    <img src="https://icon-icons.com/icons2/832/PNG/64/twitter_icon-icons.com_66688.png">
                </a>
                @* 네이버 *@
                <a href="@GetUrl(4)" target="_blank" onClick="window.open(this.href, '', 'resizable,height=400,width=500'); return false;">
                    <img src="https://icon-icons.com/icons2/555/PNG/64/line_icon-icons.com_53599.png">
                </a>
                @* 카카오스토리 *@
                <a href="@GetUrl(5)+encodeURIComponent(document.URL)" target="_blank" onClick="window.open(this.href, '', 'resizable,height=400,width=500'); return false;">
                    <img src="https://icon-icons.com/icons2/555/PNG/64/talk_icon-icons.com_53596.png">
                </a>
                @* test *@
                <a href="@GetUrl(6)+encodeURIComponent(document.URL)" target="_blank" onClick="window.open(this.href, '', 'resizable,height=400,width=500'); return false;">
                    <img src="https://icon-icons.com/icons2/555/PNG/64/blackberry_mesenger_icon-icons.com_53591.png">
                </a>
                <hr />
                <div id="bar" class="style-scope yt-copy-link-renderer">
                    <input id="share-url" value="@url" dir="ltr" readonly="" size="45" class="style-scope yt-copy-link-renderer">
                    <input type="button" value="복사" class="btn btn-outline-dark" @onclick="@CopyTextToClipboard" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>




@code {
        private void btn_Click()
        {

        }

    private ElementReference _codeElement;

    [Parameter] public RenderFragment ChildContent { get; set; }



    private bool isShow = false;

    public string url { get; set; }


    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }


    private void InvitationBy(int i)
    {
        url = $"{MyNavigationManager.Uri}/Edit/{i}";

    }

    private async Task CopyTextToClipboard()
    {

        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", url);
    }


    private void btnClose_Click()
    {
        isShow = false; // 창닫기

    }

    private string GetUrl(int i)
    {
        string result = string.Empty;
        switch (i)
        {
            case 1: //메일
                result = "mailto:?&Subject=플레이스에%20초대합니다&body=" + url;
                break;
            case 2: //페이스북
                    //result = "http://www.facebook.com/sharer/sharer.php?u=" + url;
                result = "http://www.facebook.com/sharer/sharer.php?u=https://localhost:44310/";

                break;
            case 3: //트위터
                result = "https://twitter.com/intent/tweet?text=플레이스에%20초대합니다" + "\n" + url;
                break;
            case 4: //네이버
                result = "http://blog.naver.com/openapi/share?url=" + url;
                break;
            case 5: //
                result = "https://story.kakao.com/s/share?url=" + url;
                break;
            case 6: //
                result = "https://story.kakao.com/s/share?url=https://tinyurl.com/yxax29qp";
                break;
        }
        return result;
    }




    private PagerBase pager = new PagerBase()
    {
        PageNumber = 1,
        PageIndex = 0,
        PageSize = 3,
        PagerButtonCount = 3
    };

    private List<Article> articles;

    protected override async Task OnInitializedAsync()
    {
        //전체 출력
        //페이지로드
        // articles = await ArticleRepository.GetArticlesAsync();

        // 페이징처리된 데이터만 출력
        PagingResult<Article> pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; //총 레코드 수
        articles = pagingData.Records.ToList(); // 페이징 처리된 레코드

    }

    //PagerButton 콜백 메서드
    private async void PageIndexChaged(int pageIndex)
    {
        pager.PageIndex = pageIndex;
        pager.PageNumber = pageIndex + 1;

        var pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; //총 레코드 수
        articles = pagingData.Records.ToList(); // 페이징 처리된 레코드

        StateHasChanged();// 현재 컴포넌트 재로드
    }
}
