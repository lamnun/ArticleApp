@if (showModal)
{
    <div style="position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; z-index: 100; opacity: 0.5; background-color: rgb(0, 0, 0); ">
    </div>
    <div class="modal fade show" id="myModal" style="display:block; opacity: 1.0;" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">@Title</h4>
                    <button type="button" class="close" @onclick="@(()=>onBtnClick(Result.Btn.CANCEL))"></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <CascadingValue Value=this>
                        @ChildContent
                    </CascadingValue>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    @switch (buttonType)
                    {
                        case ButtonType.OK:
                            <button type="button" class="btn btn-primary" @onclick="@(()=>onBtnClick(Result.Btn.OK))">확인</button>
                            break;

                        case ButtonType.OKCANCEL:
                            <button type="button" class="btn btn-primary" @onclick="@(()=>onBtnClick(Result.Btn.OK))">확인</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(()=>onBtnClick(Result.Btn.CANCEL))">취소</button>
                            break;

                        case ButtonType.YESNO:
                            <button type="button" class="btn btn-primary" @onclick="@(()=>onBtnClick(Result.Btn.YES))">예</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(()=>onBtnClick(Result.Btn.NO))">아니오</button>
                            break;

                        case ButtonType.YESNOCANCEL:
                            <button type="button" class="btn btn-light" @onclick="@(()=>onBtnClick(Result.Btn.CANCEL))">취소</button>
                            <button type="button" class="btn btn-primary" @onclick="@(()=>onBtnClick(Result.Btn.YES))">예</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(()=>onBtnClick(Result.Btn.NO))">아니오</button>
                            break;
                    }
                </div>

            </div>
        </div>
    </div>
}

@code {

    public enum ButtonType
    {
        OK,
        OKCANCEL,
        YESNO,
        YESNOCANCEL
    };

    public class Result
    {
        public enum Btn
        {
            OK,
            CANCEL,
            YES,
            NO
        };

        public Btn btn { get; set; }
        public Object data { get; set; }
    }

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public Action onClose { get; set; }

    private bool showModal { get; set; }
    private ButtonType buttonType { get; set; }

    public Result result = new Result();

    public void show(string sTitle, ButtonType btnType)
    {
        Title = sTitle;
        buttonType = btnType;
        showModal = true;
        StateHasChanged();
    }

    public void close(Result.Btn resultBtn, Object resultData)
    {
        result.data = resultData;
        onBtnClick(resultBtn);
    }

    public void onBtnClick(Result.Btn resultBtn)
    {
        result.btn = resultBtn;
        showModal = false;
        if (onClose != null)
            onClose();
        StateHasChanged();
    }
}
